#pragma checksum "C:\Users\Platf\OneDrive\Desktop\BarBerEMR\BarBerEMR\BarBerEMR\BarBerEMR\Views\Packages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "488002373b6125ca1403b0ae7ad572b1e5d10dd6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Packages_Index), @"mvc.1.0.view", @"/Views/Packages/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Platf\OneDrive\Desktop\BarBerEMR\BarBerEMR\BarBerEMR\BarBerEMR\Views\_ViewImports.cshtml"
using BarBerEMR;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Platf\OneDrive\Desktop\BarBerEMR\BarBerEMR\BarBerEMR\BarBerEMR\Views\_ViewImports.cshtml"
using BarBerEMR.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Platf\OneDrive\Desktop\BarBerEMR\BarBerEMR\BarBerEMR\BarBerEMR\Views\_ViewImports.cshtml"
using BarBerEMR.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Platf\OneDrive\Desktop\BarBerEMR\BarBerEMR\BarBerEMR\BarBerEMR\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"488002373b6125ca1403b0ae7ad572b1e5d10dd6", @"/Views/Packages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"26f9ddee2a9ef9ecd66732c129543896e70c51ec", @"/Views/_ViewImports.cshtml")]
    public class Views_Packages_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<PackagesViewModel>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 4 "C:\Users\Platf\OneDrive\Desktop\BarBerEMR\BarBerEMR\BarBerEMR\BarBerEMR\Views\Packages\Index.cshtml"
  
    ViewBag.Title = "Packages";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h2>Packages</h2>

<!-- Button trigger modal -->
<button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#exampleModal"">
    Create New
</button>
<div id=""alert"" class=""alert alert-success alert-dismissible fade show mt-3 d-none"" role=""alert"">
    Package added.
    <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
        <span aria-hidden=""true"">&times;</span>
    </button>
</div>


<div id=""alerterror"" class=""alert alert-danger alert-dismissible fade show mt-3 d-none"" role=""alert"">
    Unable to addPackage.
    <button type=""button"" class=""btn-close"" data-bs-dismiss=""alert"" aria-label=""Close""></button>
</div>

<table data-replace=""jtable"" id=""PackagesTable"" class=""table table-striped m-2"" aria-label=""JS Datatable"" data-locale=""en"" data-search=""true"" style=""margin-top:10px;"">

    <!--<thead id=""av"" class=""table table-striped m-4"">-->
");
            WriteLiteral("    <!--</thead>-->\r\n    <tbody>\r\n    </tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Modal for ADD Package -->\r\n");
            WriteLiteral(@"<div class=""modal"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">ِADD Package</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <input type=""hidden"" id=""ID"" name=""ID"" class=""form-control"" /><br />
");
            WriteLiteral(@"                <label>Package Name</label><br />
                <input type=""text"" id=""PackageName"" name=""PackageName"" class=""form-control"" /><br />
                <label>Package Price</label><br />
                <input type=""text"" id=""PackagePrice"" name=""PackagePrice"" class=""form-control"" /><br />
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button id=""AddPackage"" type=""button"" class=""btn btn-primary"">ADD Package</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Edit Package -->
<div class=""modal fade"" id=""EditPackage"" tabindex=""-1"" role=""dialog"" aria-labelledby=""EditPackageLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">ِEdit Package</h5>
                <button type=""");
            WriteLiteral(@"button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">


                <input type=""hidden"" id=""NewPackageID"" name=""NewPackageID"" class=""form-control hiddenid"" /><br />
                <label>Package Name</label><br />
                <input type=""text"" id=""NewPackageName"" name=""NewPackageName"" class=""form-control"" /><br />
                <input type=""text"" id=""NewPackagePrice"" name=""NewPackagePrice"" class=""form-control"" /><br />
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button id=""UpdatePackage"" type=""button"" class=""btn btn-primary"">Update Package</button>
            </div>
        </div>
    </div>
</div>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script>
        $(document).ready(function () {
            $(""#PackagesTable"").empty();
            GetAllPackages();

        })
        var tableString = """";
        $(""#AddPackage"").click(function (e) {
            debugger;
            e.preventDefault();
            var PackageName = $(""#PackageName"").val();
            var PackagePrice = $(""#PackagePrice"").val();
            var PackagesViewModel = {
                PackageName: PackageName,
                PackagePrice: PackagePrice
            }
            $.ajax({
                type: ""POST"",
                url: '/Packages/CreateNewPackage?PackageName=' + PackageName + ""&PackagePrice="" + PackagePrice,
                dataType: ""json"",
                success: function (data) {
                    if (data.messege = ""true"") {
                        $('#alert').removeClass('d-none');

                        setTimeout(function () {
                            $('#alert').addClass('d-none');
                     ");
                WriteLiteral(@"   }, 3000);

                        $('#exampleModal').modal('hide');
                        GetAllPackages();
                        console.log(""success"");
                    }

                },
                error: function (err) {
                    $('#alerterror').removeClass('d-none');
                    setTimeout(function () {
                        $('#alerterror').addClass('d-none');
                    }, 3000);
                    //GetAllPackages();
                    //$('#exampleModal').modal('hide');

                }

            });


        });//end of AddPackage click
        function GetAllPackages() {
            debugger;

            $.ajax({
                url: '/Packages/GetAllPackages',
                type: ""GET"",
                dataType: 'json',
                success: function (res) {
                    var tableString = """";
                    $(""#PackagesTable"").empty();
                    tableString = '<thead class=""table t");
                WriteLiteral(@"able-striped m-1"" ><tr class=""bg-primary text-white""><th>ID</th><th>Package Name </th><th>Package Price </th><th>Operations </th> </tr>    </thead>'
                    $.each(res, function (index, value) {
                        //    tableString += ""<tr><td>"" + value.id + ""</td><td>"" + value.packageName + ""</td><td>"" + value.packagePrice + ""</td><td><button id="" + value.id + ' onClick=""DeletePackage(' + value.id + ')"" class=""btn btn-danger"">Delete</button> </td > ' +'</tr>';
                        tableString += '<tr><td>' + value.id + '</td><td>' + value.packageName + '</td><td>' + value.packagePrice + '</td><td><button id=' + value.id + ' onClick=""DeletePackage(' + value.id + ')"" class=""btn btn-danger"">Delete</button>';
                        tableString += '<button id=' + value.id + ' data-id=' + value.id + ' data-toggle=""modal"" data-target=""#EditPackage"" class=""btn btn-primary m-2 EditPopUp"">Update</button>';
                        tableString += ' </td > </tr>';
                    });
     ");
                WriteLiteral(@"               $(""#PackagesTable"").append(tableString);
                    var tableString = """";
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error in Operation');
                }
            });
        }
        //end of GetAllPackages click
        function DeletePackage(PackageId) {
            debugger;
            $.ajax({
                url: ""/Packages/DeletePackage?id="" + PackageId,
                type: ""Delete"",
                dataType: ""json"",
                success: function () {
                    console.log(""delete success"");
                    swal(""Done!"", ""It was succesfully Deleted!"", ""success"");

                    GetAllPackages();



                },


                error: function (err) {
                    //alert(err);
                    //swal(""Error Deleting!"", ""Please try again"", ""error"");
                    //    GetAllPackages();
                }

            }");
                WriteLiteral(@");
        }
        //end of DeleteBilDeltials click
        var PackageId;
        function GetPackageNameById(BranchID) {
            debugger;
            BranchID = BranchID
            $.ajax({
                url: ""https://localhost:44343/Branches/GetBranchNameById/"" + BranchID,
                type: ""GET"",
                dataType: ""json"",
                success: function (data) {
                    console.log(data);
                    var res = JSON.parse(data);


                    $(""#NewBranchName"").val(res.BranchName);
                    $(""#NewBranchID"").val(res.BranchID);


                },
                error: function (err) {
                    alert(err);
                }

            });
        }
        //end of DeleteBilDeltials click
        $(""#UpdatePackage"").click(function (e) {
            var NewPackageID = $(""#NewPackageID"").val();
            var NewPackageName = $(""#NewPackageName"").val();
            var NewPackagePrice = $(""#NewPackag");
                WriteLiteral(@"ePrice"").val();
            $.ajax({
                url: ""/Packages/UpdatePackageNameById?id="" + NewPackageID + ""&PackageName="" + NewPackageName + ""&PackagePrice="" + NewPackagePrice,
                type: ""POST"",
                dataType: ""json"",
                success: function (data) {
                    if (data.messege = ""true"") {
                        swal(""Done!"", ""It was succesfully Updated!"", ""success"");
                        $('#EditPackage').modal('hide');
                        GetAllPackages();
                        console.log(""Update success"");
                    }
                },
                error: function (err) {
                    //alert(err);
                    swal(""Error Updating!"", ""Please try again & Check Data"", ""error"");
                }
            });
        });//end of UpdatePackage click
        $(document).on(""click"", "".EditPopUp"", function () {
            var passedID = $(this).data('id');
            $("".modal-body .hiddenid"").val(pa");
                WriteLiteral(@"ssedID);

            debugger;
            var PackageName = $(this).closest('tr').find('td:eq(1)').text();
            $('#NewPackageName').value = PackageName;
            var PackagePrice = $(this).closest('tr').find('td:eq(2)').text();
            $('#NewPackagePrice').value = PackagePrice;
        });
        function addAllColumnHeaders(myList) {
            var columnSet = [];
            var headerTr$ = $('<tr/>');
            for (var i = 0; i < myList.length; i++) {
                var rowHash = myList[i];
                for (var key in rowHash) {
                    if ($.inArray(key, columnSet) == -1) {

                        columnSet.push(key);
                        headerTr$.append($('<th/>').html(key));

                    }
                }
            }
            $(""#av"").append(headerTr$);

            return columnSet;
        }


    </script>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<PackagesViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
